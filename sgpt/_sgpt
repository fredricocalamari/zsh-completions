compdef _sgpt sgpt

_sgpt_list_chats() {
    local -a chats
    chats=("${(@f)$(sgpt --list-chats | awk -F'/' '{print $NF}')}") # Extract only the last segment as conversation name
    _wanted chats expl 'conversation' compadd -a chats
}

_sgpt() {
    local -a options
    options=(
        '--model[Specify the model to use]:model:(gpt-4-1106-preview gpt-3.5-turbo other-model-ids)'
        '--temperature[Set the randomness of output, range 0.0-2.0]:'
        '--top-p[Limits highest probable tokens, range 0.0-1.0]:'
        '--md[Enable markdown output]'
        '--no-md[Disable markdown output]'
        '--editor[Open editor to provide a prompt]'
        '--no-editor[Do not open editor]'
        '--cache[Cache completion results]'
        '--no-cache[Do not cache results]'
        '--version[Show version]'
        '--help[Show help message]'
        '--shell[Generate and execute shell commands]'
        '--no-interaction[Disable interactive mode for --shell option]'
        '--describe-shell[Describe a shell command]'
        '--code[Generate only code]'
        '--functions[Allow function calls]'
        '--no-functions[Disallow function calls]'
        '--chat[Follow conversation with id]:chat id:_sgpt_list_chats'
        '--repl[Start a REPL session]:repl session:_sgpt_list_chats'
        '--show-chat[Show all messages from provided chat id]:chat id:_sgpt_list_chats'
        '--list-chats[List all existing chat ids]'
        '--role[Specify system role for GPT model]:role:'
        '--create-role[Create role]:role:'
        '--show-role[Show role]:role:'
        '--list-roles[List roles]'
    )
    _arguments -s $options
}

autoload -Uz compinit && compinit

